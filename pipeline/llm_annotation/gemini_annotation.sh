#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

# ==============================================================================
# Gemini-as-a-Judge 평가 자동화 스크립트
# ==============================================================================

# --- Configuration ---
JUDGE_MODELS=(
    # "gemini-2.5flash"
    "gemini-2.5pro"
)
TARGET_MODELS=(
    # "llama3.1-8b"
    "llama3.3-70b"
    "llama4"
    "medgemma-27b"
    "qwen3-8b"
    "qwen3-32b"
)
DATASETS=(
    # "chexpert"
    # "mimic-cxr"
    # "mimic-iv"
    # "rexgradient"
    "yale_internal"
)
BASE_INPUT_DIR="../result"
BASE_OUTPUT_DIR="./result"
PYTHON_SCRIPT="run_annotation.py"
WAIT_SECONDS=60

# --- Main Execution Logic ---
for judge in "${JUDGE_MODELS[@]}"; do
    JUDGE_CONFIG_FILE="./configs/${judge}.json"
    
    if [ ! -f "$JUDGE_CONFIG_FILE" ]; then
        echo "[FATAL] Judge config file not found: ${JUDGE_CONFIG_FILE}"
        exit 1
    fi

    echo "======================================================"
    echo ">> STARTING EVALUATIONS WITH JUDGE: ${judge}"
    echo "======================================================"

    for target in "${TARGET_MODELS[@]}"; do
        echo "------------------------------------------------------"
        echo ">> Evaluating results generated by: ${target}"
        echo "------------------------------------------------------"

        for dataset in "${DATASETS[@]}"; do
            input_filename=""
            case $dataset in
                "chexpert") input_filename="chexpert-plus_sampled2000_local_vllm_feedback.json" ;;
                "mimic-cxr") input_filename="mimic-cxr_sampled2000_local_vllm_feedback.json" ;;
                "mimic-iv") input_filename="mimic-iv-note_sampled2000_local_vllm_feedback.json" ;;
                "rexgradient") input_filename="ReXGradient-160K_sampled2000_local_vllm_feedback.json" ;;
                "yale_internal") input_filename="yale_internal_local_vllm_feedback.json" ;;
                *) echo "[WARN] Unknown dataset: $dataset. Skipping."; continue ;;
            esac

            INPUT_FILE="${BASE_INPUT_DIR}/${target}/${dataset}_2000/${input_filename}"
            if [ "$dataset" == "yale_internal" ]; then
                INPUT_FILE="${BASE_INPUT_DIR}/${target}/yale_internal/${input_filename}"
            fi
            
            OUTPUT_DIR="${BASE_OUTPUT_DIR}/${judge}/${dataset}/${target}"

            if [ ! -f "$INPUT_FILE" ]; then
                echo "[ERROR] Input file not found for ${target} on ${dataset}. Skipping."
                echo "        Expected at: ${INPUT_FILE}"
                continue
            fi

            echo ">> STARTING: ${target} on ${dataset}"
            
            python ${PYTHON_SCRIPT} \
                --input_file "${INPUT_FILE}" \
                --output_dir "${OUTPUT_DIR}" \
                --config_file "${JUDGE_CONFIG_FILE}"
            
            echo ">> COMPLETED: ${target} on ${dataset}"

            if [ ${CURRENT_EXPERIMENT} -lt ${TOTAL_EXPERIMENTS} ]; then
                echo "------------------------------------------------------"
                echo ">> Pausing for 10 minutes (${WAIT_SECONDS}s) before the next experiment."
                echo "   Press Ctrl+C to abort."
                echo "------------------------------------------------------"
                sleep ${WAIT_SECONDS}
            fi
            echo ""
        done
    done
done

echo "======================================================"
echo ">> ALL GEMINI EVALUATIONS COMPLETE"
echo "======================================================"